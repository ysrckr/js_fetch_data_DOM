{"version":3,"sources":["scripts/main.js"],"names":["timeOut","err","setTimeout","Promise","reject","Error","request","url","fetch","then","response","ok","headers","get","includes","json","status","statusText","catch","BASE_URL","listUrl","detailsUrl","body","document","querySelector","main","createElement","ul","h1","style","margin","appendChild","displayPhones","phones","forEach","phone","li","h2","p","dataset","id","textContent","name","snippet","append","classList","add","displayDetail","detail","phoneId","description","init","phonesId","map","replace"],"mappings":";AAAA,aAEA,IAAMA,EAAU,SAACC,GACRC,OAAAA,WAAW,WACTC,OAAAA,QAAQC,OACb,IAAIC,MAAMJ,KAEX,MAGCK,EAAU,SAACC,GACRC,OAAAA,MAAMD,GACVE,KAAK,SAAAC,GACA,OAACA,EAASC,GAMTD,EAASE,QAAQC,IAAI,gBAAgBC,SAAS,oBAM5CJ,EAASK,OALPZ,QAAQC,OACb,IAAIC,MAAM,yBAPLF,QAAQC,OACb,IAAIC,MAASK,GAAAA,OAAAA,EAASM,OAAYN,OAAAA,OAAAA,EAASO,gBAYhDC,MAAM,SAAAjB,GAAOD,OAAAA,EAAQC,MAIpBkB,EAAW,4DACXC,EAAaD,GAAAA,OAAAA,EAAnB,gBACME,EAAgBF,GAAAA,OAAAA,EAAtB,yBAGMG,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASG,cAAc,QAC9BC,EAAKJ,SAASG,cAAc,MAE5BE,EAAKL,SAASC,cAAc,MAElCI,EAAGC,MAAMC,OAAS,iBAElBL,EAAKM,YAAYH,GAEjBN,EAAKS,YAAYN,GACjBA,EAAKM,YAAYJ,GAGjB,IAAMK,EAAgB,SAACC,GACrBA,EAAOC,QAAQ,SAAAC,GACPC,IAAAA,EAAKb,SAASG,cAAc,MAC5BW,EAAKd,SAASG,cAAc,MAC5BY,EAAIf,SAASG,cAAc,KAEjCU,EAAGG,QAAQC,GAAKL,EAAMK,GAEtBH,EAAGI,YAAcN,EAAMO,KACvBJ,EAAEG,YAAcN,EAAMQ,QAEtBhB,EAAGiB,OAAOR,GACVA,EAAGQ,OAAOP,GACVD,EAAGQ,OAAON,GACVF,EAAGS,UAAUC,IAAI,kBAKfC,EAAgB,SAACC,EAAQC,GACvBb,IAAAA,EAAKb,SAASC,cAA2ByB,aAAAA,OAAAA,EAA/C,OACMX,EAAIf,SAASG,cAAc,KAEjCY,EAAEG,YAAcO,EAAOE,YAEvBd,EAAGQ,OAAON,IAINa,EAAO,WACX7C,EAAQc,GAASX,KAAK,SAAAwB,GACdmB,IAAAA,EAAWnB,EAAOoB,IAAI,SAAAlB,GAASA,OAAAA,EAAMK,KAE3CR,EAAcC,GAEdmB,EAASC,IAAI,SAAAb,GACJlC,OAAAA,EAAQe,EAAWiC,QAAQ,WAAYd,IAC3C/B,KAAK,SAAAuC,GACJD,EAAcC,EAAQR,UAMhCW","file":"main.b043abfc.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst timeOut = (err) => {\n  return setTimeout(() => {\n    return Promise.reject(\n      new Error(err)\n    );\n  }, 5000);\n};\n\nconst request = (url) => {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`)\n        );\n      }\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        return Promise.reject(\n          new Error('Response is not JSON')\n        );\n      }\n\n      return response.json();\n    })\n    .catch(err => timeOut(err));\n};\n\n// Urls\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst listUrl = `${BASE_URL}/phones.json`;\nconst detailsUrl = `${BASE_URL}/phones/:phoneId.json`;\n\n// Elements\nconst body = document.querySelector('body');\nconst main = document.createElement('main');\nconst ul = document.createElement('ul');\n\nconst h1 = document.querySelector('h1');\n\nh1.style.margin = '40px auto 80px';\n\nmain.appendChild(h1);\n\nbody.appendChild(main);\nmain.appendChild(ul);\n\n// Display phones\nconst displayPhones = (phones) => {\n  phones.forEach(phone => {\n    const li = document.createElement('li');\n    const h2 = document.createElement('h2');\n    const p = document.createElement('p');\n\n    li.dataset.id = phone.id;\n\n    h2.textContent = phone.name;\n    p.textContent = phone.snippet;\n\n    ul.append(li);\n    li.append(h2);\n    li.append(p);\n    li.classList.add('phone__item');\n  });\n};\n\n// Display details\nconst displayDetail = (detail, phoneId) => {\n  const li = document.querySelector(`[data-id=\"${phoneId}\"]`);\n  const p = document.createElement('p');\n\n  p.textContent = detail.description;\n\n  li.append(p);\n};\n\n// Initilize\nconst init = () => {\n  request(listUrl).then(phones => {\n    const phonesId = phones.map(phone => phone.id);\n\n    displayPhones(phones);\n\n    phonesId.map(id => {\n      return request(detailsUrl.replace(':phoneId', id))\n        .then(detail => {\n          displayDetail(detail, id);\n        });\n    });\n  });\n};\n\ninit();\n"]}